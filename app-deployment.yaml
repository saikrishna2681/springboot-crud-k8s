apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: springboot-pvc-claim
spec:
  resources: 
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteMany

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-crud-deployment
spec:
  selector:
    matchLabels:
      app: springboot-k8s-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: springboot-k8s-mysql
    spec:
      containers:
        - name: springboot-crud-k8s
          imagePullPolicy: Always
          image: 2681/spcrud:v1
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  host

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  password
          volumeMounts:        # Mounting voulume obtained from Persistent Volume Claim
            - name: springapp-persistent-storage
              mountPath: /var/lib/springapp #This is the path in the container on which the mounting will take place.
      volumes:
        - name: springapp-persistent-storage # Obtaining 'vloume' from PVC
          persistentVolumeClaim:
            claimName: springboot-pvc-claim

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: springboot-crud-svc
spec:
  selector:
    app: springboot-k8s-mysql
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: NodePort # type of the service.

